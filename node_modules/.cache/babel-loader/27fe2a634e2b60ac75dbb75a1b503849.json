{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container } from 'react-bootstrap';\nconst token = localStorage.getItem('token');\n\nconst AdminDashboard = () => {\n  _s();\n\n  const [users, setUsers] = useState();\n  useEffect(() => {\n    const fetchData = () => {\n      axios.get('https://secopsapi.herokuapp.com/api/users', {\n        headers: {\n          authorization: `Bearer ${token}`\n        }\n      }).then(res => {\n        setUsers(res.data.message);\n      });\n    };\n\n    fetchData();\n  }, [users]);\n\n  if (!users) {}\n};\n\n_s(AdminDashboard, \"LQkddvx2HtKGflMjzZE1OVCsOUU=\");\n\n_c = AdminDashboard;\nexport default AdminDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"sources":["C:/Users/chess/code_projects/secopsfrontend/src/LoggedInComponents/AdminDashboard.js"],"names":["React","useState","useEffect","axios","Container","token","localStorage","getItem","AdminDashboard","users","setUsers","fetchData","get","headers","authorization","then","res","data","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,SAAS,GAAG,MAAM;AACpBR,MAAAA,KAAK,CAACS,GAAN,CAAU,2CAAV,EAAuD;AAACC,QAAAA,OAAO,EAAE;AAACC,UAAAA,aAAa,EAAG,UAAST,KAAM;AAAhC;AAAV,OAAvD,EAAsGU,IAAtG,CAA4GC,GAAD,IAAS;AACpHN,QAAAA,QAAQ,CAACM,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAR;AAEH,OAHG;AAGD,KAJH;;AAKAP,IAAAA,SAAS;AACZ,GAPQ,EAON,CAACF,KAAD,CAPM,CAAT;;AASA,MAAI,CAACA,KAAL,EAAY,CAEX;AAKJ,CAlBD;;GAAMD,c;;KAAAA,c;AAoBN,eAAeA,cAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nconst token = localStorage.getItem('token')\r\n\r\nconst AdminDashboard = () => {\r\n    const [users, setUsers] = useState()\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            axios.get('https://secopsapi.herokuapp.com/api/users', {headers: {authorization: `Bearer ${token}`}}).then((res) => {\r\n            setUsers(res.data.message)\r\n\r\n        })} \r\n        fetchData()\r\n    }, [users])\r\n\r\n    if (!users) {\r\n\r\n    }\r\n\r\n   \r\n\r\n    \r\n}\r\n\r\nexport default AdminDashboard\r\n"]},"metadata":{},"sourceType":"module"}